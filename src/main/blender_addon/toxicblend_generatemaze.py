#!/usr/bin/python   
import bpy
import toxicblend
import imp # needed when reloading toxicblend site-packages, won't be used in a release version

# How to install this plugin:
# 
# run this in the blender console:
#   import site; site.getsitepackages()
#
# copy the content of the toxicblend/src/main/blender_addon/site-packages directory to one of the 
# directories listed by the previous command. 
# 
# OSX example:
# cp -R toxicblend/src/main/blender_addon/site-packages/* /Applications/Blender-2.72b/blender-2.72b.app/Contents/MacOS/../Resources/2.72/python/lib/python3.4/site-packages
#
# then restart blender and use "Run script" on this file

bl_info = {
  "name": "Toxicblend - Generate maze",
  'description': 'Generates a maze from a set of interconnected edges. Maze is generated by randomly removing edges, so make sure the input is well interconnected.',
  'author': 'EAD Fritz',
  'blender': (2, 69, 0),
  "category": "Object",
}
       
class ToxicBlend_GenerateMaze(bpy.types.Operator):
  '''Generate maze from a set of edges'''
  bl_idname = "object.toxicblend_generatemaze"
  bl_label = "Toxicblend:Generate Maze"
  bl_options = {'REGISTER', 'UNDO'}  # enable undo for the operator.
  
  startPointProperty = bpy.props.EnumProperty(
    name="Starting point",
    items=(("CORNER", "Corner",""),
           ("CENTER", "Center",""),
           ("RANDOM", "Random","")),
           default="RANDOM"    
          )

  @classmethod
  def poll(cls, context):
    return context.active_object is not None

  def execute(self, context):
    imp.reload(toxicblend)
    try:
      with toxicblend.ByteCommunicator("localhost", 9999) as bc: 
        unitSystemProperty = context.scene.unit_settings
        activeObject = context.scene.objects.active
        properties = {'unitSystem': str(unitSystemProperty.system),
                      'unitScale' : str(unitSystemProperty.scale_length),
                      'startPoint': str(self.startPointProperty)}
        bc.sendSingleBlenderObject(activeObject, self.bl_idname, properties)
        bc.receiveObjects()
        return {'FINISHED'}
    except toxicblend.ToxicblendException as e:
      self.report({'ERROR'}, e.message)
      return {'CANCELLED'}

def register():
  bpy.utils.register_class(ToxicBlend_GenerateMaze)

def unregister():
  bpy.utils.unregister_class(ToxicBlend_GenerateMaze)

if __name__ == "__main__":
  register()