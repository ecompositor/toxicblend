package org.toxicblend.tests

import collection.mutable.Stack
import org.scalatest._
import org.toxicblend.operations.gcodeparse.GCodeParser
import org.toxicblend.operations.gcodeparse.GcodeMultiCommand
import org.toxicblend.operations.gcodeparse.GcodeSingleCommand
import org.toxicblend.operations.gcodeparse.GcodeLines
import org.toxicblend.operations.gcodeparse.GcodeParameter

class GCodeParserTests1 extends FlatSpec with Matchers {
 
  "regexp test" should "work" in {
     val r = """(?:[ \t\r]+)|(?:\([^\)]*\))""".r.replaceAllIn("  h i(comment)h(keep h)(d s \ndfg ) a a", "")  
     r.size should be (5)
     r should be ("hihaa")
  }
  
  "gSingleLineParameters wo comment" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = "x1 y2 z3"
    val parsed = objParser.parse(objParser.gSingleLineParameters,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (true)
    val ret = parsed.get
    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    rest.size should be (0)
    
    val stepData = ret.toArray 
    stepData.size should be (3)
    stepData(0).key   should be ("X")
    stepData(0).value should be (1f)
    stepData(1).key   should be ("Y")
    stepData(1).value should be (2f)
    stepData(2).key   should be ("Z")
    stepData(2).value should be (3f)
  }
  
  "gSingleLineParameters with comment" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = "x5 y6 (this is a comment)z7(this is too)"
    val parsed = objParser.parse(objParser.gSingleLineParameters,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (true)
    val ret = parsed.get
    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    rest.size should be (0)
    
    val stepData = ret.toArray 
    stepData.size should be (3)
    stepData(0).key   should be ("X")
    stepData(0).value should be (5f)
    stepData(1).key   should be ("Y")
    stepData(1).value should be (6f)
    stepData(2).key   should be ("Z")
    stepData(2).value should be (7f)
  }

  "gMultiLineCommand wo comment" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = "g0  x1 y2 z3"
    val parsed = objParser.parse(objParser.gMultiLineCommand,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (true)
    val ret = parsed.get match { case rv:GcodeMultiCommand => rv }
    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    rest.size should be (0)
    
    val steps = ret.steps.toArray 
    steps.size should be (1)
    val stepData = steps(0).toArray
    ret.key should be ("G0")
    stepData.size should be (3)
    stepData(0).key   should be ("X")
    stepData(0).value should be (1f)
    stepData(1).key   should be ("Y")
    stepData(1).value should be (2f)
    stepData(2).key   should be ("Z")
    stepData(2).value should be (3f)
  }
  
  "gMultiLineCommand with comment" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = "(comment)g0()  x4 y5 z6(comment)"
    val parsed = objParser.parse(objParser.gMultiLineCommand,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (true)
    val ret = parsed.get match { case rv:GcodeMultiCommand => rv }
    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    rest.size should be (0)
    
    val steps = ret.steps.toArray 
    steps.size should be (1)
    val stepData = steps(0).toArray
    ret.key should be ("G0")
    stepData.size should be (3)
    stepData(0).key   should be ("X")
    stepData(0).value should be (4f)
    stepData(1).key   should be ("Y")
    stepData(1).value should be (5f)
    stepData(2).key   should be ("Z")
    stepData(2).value should be (6f)
  }
  
  "gMultiLineCommand multiline with comment" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = "n0g0  x1 y2  z3 (comme\nnt comment)\nx2 y2 (ffdf)z-3(dfgdf)"
    val parsed = objParser.parse(objParser.gMultiLineCommand,objParser.filterOutWhiteSpace(arg))
    val ret = parsed.get match { case rv:GcodeMultiCommand => rv }

    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    rest.size should be (0)
    
    val steps = ret.steps.toArray 
    steps.size should be (2)
    var stepData = steps(0).toArray
    ret.key should be ("G0")
    stepData.size should be (3)
    stepData(0).key   should be ("X")
    stepData(0).value should be (1f)
    stepData(1).key   should be ("Y")
    stepData(1).value should be (2f)
    stepData(2).key   should be ("Z")
    stepData(2).value should be (3f)
    stepData = steps(1).toArray
    stepData.size should be (3)
    stepData(0).key   should be ("X")
    stepData(0).value should be (2f)
    stepData(1).key   should be ("Y")
    stepData(1).value should be (2f)
    stepData(2).key   should be ("Z")
    stepData(2).value should be (-3f)
  }
  
  "gSingleLineCommand with comment" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = "(comment)G17 X0 i2j-1(comment)"
    val parsed = objParser.parse(objParser.gSingleLineCommand,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (true)
    val ret = parsed.get match { case rv:GcodeSingleCommand => rv }
    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    rest.size should be (0)
    
    val parameters = ret.parameters.get
    parameters.size should be (3)
    val stepData = parameters.toArray
    ret.key should be ("G17")
    stepData.size should be (3)
    stepData(0).key   should be ("X")
    stepData(0).value should be (0f)
    stepData(1).key   should be ("I")
    stepData(1).value should be (2f)
    stepData(2).key   should be ("J")
    stepData(2).value should be (-1f)
  }
  
  "gSingleLineCommand with G0" should "completely fail" in {
    val objParser = new GCodeParser
    val arg = "(comment)G0 X0 i2j-1(comment)"
    val parsed = objParser.parse(objParser.gSingleLineCommand,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (false)
  }
  
  "gSingleLineCommand with G00" should "completely fail" in {
    val objParser = new GCodeParser
    val arg = "(comment)G0 X0 i2j-1(comment)"
    val parsed = objParser.parse(objParser.gSingleLineCommand,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (false)
  }
  
  "gSingleLineCommand with G1" should "completely fail" in {
    val objParser = new GCodeParser
    val arg = "(comment)G1 X0 i2j-1(comment)"
    val parsed = objParser.parse(objParser.gSingleLineCommand,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (false)
  }
  
  "gSingleLineCommand with G01" should "completely fail" in {
    val objParser = new GCodeParser
    val arg = "(comment)G1 X0 i2j-1(comment)"
    val parsed = objParser.parse(objParser.gSingleLineCommand,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (false)
  }
   
  "gCode multiline with comment 2" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = "    G17 G20 G40 G49 G54 G80 G90 G94\nN 0 g0  x1 y2  z3 (comme\nnt comment)\nx1 y1 z1\nN1 g1 x2 y2 z3"
    val parsed = objParser.parse(objParser.gCode,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (true)
    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    
    val ret = parsed.get
    rest.size should be (0)
    ret.commands.size should be (10)
    
    var command = ret.commands(0) match { case c:GcodeSingleCommand => c}
    command.key should be ("G17")   
    command.parameters.size should be (0)
    
    command = ret.commands(1) match { case c:GcodeSingleCommand => c}
    command.key should be ("G20")   
    command.parameters.size should be (0)
    
    command = ret.commands(2) match { case c:GcodeSingleCommand => c}
    command.key should be ("G40")   
    command.parameters.size should be (0)
    
    command = ret.commands(3) match { case c:GcodeSingleCommand => c}
    command.key should be ("G49")   
    command.parameters.size should be (0)
    
    command = ret.commands(4) match { case c:GcodeSingleCommand => c}
    command.key should be ("G54")   
    command.parameters.size should be (0)
    
    command = ret.commands(5) match { case c:GcodeSingleCommand => c}
    command.key should be ("G80")   
    command.parameters.size should be (0)
    
    command = ret.commands(6) match { case c:GcodeSingleCommand => c}
    command.key should be ("G90")   
    command.parameters.size should be (0)
    
    command = ret.commands(7) match { case c:GcodeSingleCommand => c}
    command.key should be ("G94")   
    command.parameters.size should be (0)
    
    var command1 = ret.commands(8) match { case c:GcodeMultiCommand => c}
    command1.key should be ("G0")   
    command1.steps.size should be (2)
    var stepData = command1.steps(0).toArray
    stepData(0).key   should be ("X")
    stepData(0).value should be (1f)
    stepData(1).key   should be ("Y")
    stepData(1).value should be (2f)
    stepData(2).key   should be ("Z")
    stepData(2).value should be (3f)
    
    command1 = ret.commands(9) match { case c:GcodeMultiCommand => c}
    command1.key should be ("G1")   
    command1.steps.size should be (1)
    stepData = command1.steps(0).toArray
    stepData.size should be (3)
    stepData(0).key   should be ("X")
    stepData(0).value should be (2f)
    stepData(1).key   should be ("Y")
    stepData(1).value should be (2f)
    stepData(2).key   should be ("Z")
    stepData(2).value should be (3f) 
  }
 
  "gCode multiline with comment 3" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = """
  G0Z2.0
M3S1000
G4P3
G0F1000
G1F500
G64P0.02Q0.02
G0Z2.000000
      
G0X19.01426Y26.41212
G1X19.01426Y26.41212Z0F500.000000
G1X19.01426Y26.41212Z-11.68791F100.000000
X19.01426Y26.41212Z-11.68791F500.000000
G1X19.01426Y26.41212Z-11.68791"""
    val parsed = objParser.parse(objParser.gCode,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (true)
    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    rest.size should be (0)
    val ret = parsed.get
    ret.commands.size should be (11)
  }  

    "gCode multiline with comment 4" should "completely parse" in {
    val objParser = new GCodeParser
    val arg = """G17 G20 G40 G49 G54 G80 G90 G94
G0 Z2.0 (goto safe z)
M3 S1000 (start splindle)
G4 P3  (dwell 3 seconds)
G0 F1000 (set rapid feedrate)
G1 F500 (set normal feedrate)
G64 P0.02 Q0.02
G0 Z2.000000
G0 X19.01426 Y26.41212
G1 X19.01426 Y26.41212 Z0 F500.000000
G1 X19.01426 Y26.41212 Z-11.68791 F100.000000
G1 X19.01426 Y26.41212 Z-11.68791 F500.000000
G1 X19.01426 Y26.41212 Z-11.68791 
G1 X20.81396 Y27.20154 Z-13.37177 
G1 X23.99418 Y24.75371 Z-11.88044 
G1 X26.76230 Y23.35208 Z-10.87037 
G1 X30.86569 Y22.06351 Z-9.78996 
G1 X35.54356 Y21.31058 Z-9.02444 
G1 X40.85203 Y21.03279 Z-8.58315 
G1 X48.17540 Y21.27965 Z-8.31863 
G1 X61.07601 Y22.72789 Z-7.92359 
G1 X68.84435 Y24.41850 Z-7.74247 
G1 X76.05282 Y26.67397 Z-7.70647 
G1 X83.11931 Y29.71456 Z-7.78356 
G1 X89.80085 Y33.44109 Z-7.99247 
G1 X92.09609 Y36.92936 Z-9.79396 
G1 X93.00602 Y40.20805 Z-12.60875 
G1 X90.35070 Y41.26232 Z-12.30626 
G1 X79.22066 Y43.96066 Z-12.19509 
G1 X63.59462 Y46.41475 Z-11.70418 
G1 X50.17256 Y47.05698 Z-11.00731 
G1 X44.83669 Y46.75681 Z-10.50620 
G1 X38.68090 Y45.91569 Z-9.69909 
G1 X34.30378 Y44.82671 Z-9.16909 
G1 X30.54224 Y43.34565 Z-8.88005 
G1 X27.45844 Y41.43606 Z-8.90664 
G1 X25.69103 Y39.86602 Z-9.16160 
G1 X23.70012 Y37.40203 Z-9.83474 
G1 X21.83811 Y33.69526 Z-11.08089 
G1 X20.93559 Y30.32954 Z-12.29392 
G1 X20.81396 Y27.20154 Z-13.37177 
G0 Z2.000000
G0 X93.00602 Y40.20805
G1 X93.00602 Y40.20805 Z0 F500.000000
G1 X93.00602 Y40.20805 Z-12.60875 F100.000000
G1 X93.00602 Y40.20805 Z-12.60875 F500.000000
G1 X95.97623 Y39.67372 Z-12.28407 
G1 X101.33161 Y38.35571 Z-12.64790 
G1 X104.37339 Y36.93015 Z-12.20320 
G1 X127.58415 Y30.11340 Z-12.06722 
G1 X138.16006 Y27.64258 Z-11.95909 
G1 X151.56474 Y25.29452 Z-11.72782 
G1 X163.38142 Y23.97940 Z-11.41501 
G1 X173.90578 Y23.38041 Z-11.14017 
G1 X187.31305 Y23.45609 Z-10.58361 
G1 X199.92793 Y24.57175 Z-9.84813 
G1 X209.90602 Y26.54983 Z-9.27574 
G1 X217.94870 Y29.01746 Z-8.92240 
G1 X225.48563 Y32.18660 Z-8.80183 
G1 X232.25726 Y35.95157 Z-8.96537 
G1 X238.66357 Y40.84625 Z-9.27938 
G1 X243.61537 Y45.73833 Z-9.79795 
G1 X248.37747 Y51.74810 Z-10.61900 
G1 X252.15053 Y57.97070 Z-11.57916 
G1 X255.83772 Y66.52592 Z-12.70681 
G1 X258.22888 Y75.37631 Z-13.72874 
G1 X259.46808 Y84.50014 Z-14.53493 
G1 X259.54794 Y94.00659 Z-15.14472 
G1 X258.59229 Y102.58652 Z-15.55620 
G1 X256.72028 Y111.20028 Z-15.81812 
G1 X253.94580 Y119.81097 Z-15.95059 
G1 X250.27531 Y128.38364 Z-15.97536 
G1 X245.71953 Y136.86292 Z-15.91298 
G1 X240.29520 Y145.18030 Z-15.78485 
G1 X233.64615 Y153.66245 Z-15.60370 
G1 X225.81792 Y162.07391 Z-15.36197 
G1 X217.20932 Y169.90504 Z-15.09252 
G1 X207.87270 Y177.09846 Z-14.80260 
G1 X197.87180 Y183.58835 Z-14.49750 
G1 X191.32379 Y187.25742 Z-14.41248 
G1 X188.82152 Y188.96266 Z-14.65365 
G1 X185.44745 Y190.05376 Z-14.16013 
G1 X182.14360 Y190.83307 Z-14.68305 
G1 X178.02104 Y193.28452 Z-13.86755 
G1 X164.18526 Y198.14804 Z-13.31415 
G1 X153.70927 Y200.77307 Z-12.88580 
G1 X141.59724 Y202.74223 Z-12.40304 
G1 X132.17528 Y203.51656 Z-11.97415 
G1 X121.59966 Y203.58911 Z-11.40692 
G1 X107.81183 Y202.18343 Z-10.38768 
G1 X98.67741 Y200.07875 Z-9.73175 
G1 X91.31187 Y197.48637 Z-9.23000 
G1 X86.14028 Y195.07533 Z-9.00023 
G1 X79.11707 Y190.78290 Z-8.58624 
G1 X72.94344 Y185.72032 Z-8.27430 
G1 X68.40279 Y180.77780 Z-8.07212 
G1 X63.40750 Y173.57677 Z-7.97158 
G1 X60.00529 Y166.72614 Z-7.82270 
G1 X56.98561 Y157.39742 Z-7.44688 
G1 X55.86639 Y151.83487 Z-7.27354 
G1 X56.32057 Y151.08086 Z-6.65939 
G0 Z2.000000
G0 X101.33161 Y38.35571
G1 X101.33161 Y38.35571 Z0 F500.000000
G1 X101.33161 Y38.35571 Z-12.64790 F100.000000
G1 X101.33161 Y38.35571 Z-12.64790 F500.000000
G1 X102.84102 Y42.66626 Z-9.38625 
G1 X104.23088 Y44.96327 Z-8.88161 
G1 X109.05595 Y50.12414 Z-9.25391 
G1 X114.43681 Y56.77122 Z-9.68178 
G1 X122.02274 Y67.90530 Z-10.37259 
G1 X126.12309 Y74.89516 Z-10.71204 
G1 X133.65089 Y89.62907 Z-11.26828 
G1 X137.47076 Y98.08228 Z-11.49998 
G1 X144.86513 Y116.33286 Z-11.82669 
G1 X154.29431 Y141.83282 Z-11.76417 
G1 X162.00339 Y158.75958 Z-11.45980 
G1 X169.60956 Y171.70775 Z-11.06122 
G1 X178.17612 Y183.03716 Z-10.45044 
G1 X179.47041 Y185.07628 Z-10.68028 
G1 X182.14360 Y190.83307 Z-14.68305 
G0 Z2.000000
G0 X188.82152 Y188.96266
G1 X188.82152 Y188.96266 Z0 F500.000000
G1 X188.82152 Y188.96266 Z-14.65365 F100.000000
G1 X188.82152 Y188.96266 Z-14.65365 F500.000000
G1 X191.09839 Y194.19711 Z-10.26704 
G1 X193.23192 Y197.10240 Z-9.21493 
G1 X195.86191 Y199.11943 Z-9.11272 
G1 X204.08835 Y204.57658 Z-8.90746 
G1 X211.08000 Y208.17601 Z-8.72438 
G1 X219.16783 Y211.15189 Z-8.26373 
G1 X228.53368 Y213.14650 Z-7.36678 
G1 X229.29805 Y213.77870 Z-6.74708 
G0 Z2.000000
G0 X228.53368 Y213.14650
G1 X228.53368 Y213.14650 Z0 F500.000000
G1 X228.53368 Y213.14650 Z-7.36678 F100.000000
G1 X228.53368 Y213.14650 Z-7.36678 F500.000000
G1 X228.65179 Y212.96188 Z-7.15751 
G0 Z2.000000
G0 X19.01426 Y26.41212
G1 X19.01426 Y26.41212 Z0 F500.000000
G1 X19.01426 Y26.41212 Z-12.68791 F100.000000
G1 X19.01426 Y26.41212 Z-12.68791 F500.000000
G1 X19.01426 Y26.41212 Z-12.68791 
G1 X20.81396 Y27.20154 Z-14.37177 
G1 X23.99418 Y24.75371 Z-12.88044 
G1 X26.76230 Y23.35208 Z-11.87037 
G1 X30.86569 Y22.06351 Z-10.78996 
G1 X35.54356 Y21.31058 Z-10.02444 
G1 X40.85203 Y21.03279 Z-9.58315 
G1 X48.17540 Y21.27965 Z-9.31863 
G1 X61.07601 Y22.72789 Z-8.92359 
G1 X68.84435 Y24.41850 Z-8.74247 
G1 X76.05282 Y26.67397 Z-8.70647 
G1 X83.11931 Y29.71456 Z-8.78356 
G1 X89.80085 Y33.44109 Z-8.99247 
G1 X92.09609 Y36.92936 Z-10.79396 
G1 X93.00602 Y40.20805 Z-13.60875 
G1 X90.35070 Y41.26232 Z-13.30626 
G1 X79.22066 Y43.96066 Z-13.19509 
G1 X63.59462 Y46.41475 Z-12.70418 
G1 X50.17256 Y47.05698 Z-12.00731 
G1 X44.83669 Y46.75681 Z-11.50620 
G1 X38.68090 Y45.91569 Z-10.69909 
G1 X34.30378 Y44.82671 Z-10.16909 
G1 X30.54224 Y43.34565 Z-9.88005 
G1 X27.45844 Y41.43606 Z-9.90664 
G1 X25.69103 Y39.86602 Z-10.16160 
G1 X23.70012 Y37.40203 Z-10.83474 
G1 X21.83811 Y33.69526 Z-12.08089 
G1 X20.93559 Y30.32954 Z-13.29392 
G1 X20.81396 Y27.20154 Z-14.37177 
G0 Z2.000000
G0 X93.00602 Y40.20805
G1 X93.00602 Y40.20805 Z0 F500.000000
G1 X93.00602 Y40.20805 Z-13.60875 F100.000000
G1 X93.00602 Y40.20805 Z-13.60875 F500.000000
G1 X95.97623 Y39.67372 Z-13.28407 
G1 X101.33161 Y38.35571 Z-13.64790 
G1 X104.37339 Y36.93015 Z-13.20320 
G1 X127.58415 Y30.11340 Z-13.06722 
G1 X138.16006 Y27.64258 Z-12.95909 
G1 X151.56474 Y25.29452 Z-12.72782 
G1 X163.38142 Y23.97940 Z-12.41501 
G1 X173.90578 Y23.38041 Z-12.14017 
G1 X187.31305 Y23.45609 Z-11.58361 
G1 X199.92793 Y24.57175 Z-10.84813 
G1 X209.90602 Y26.54983 Z-10.27574 
G1 X217.94870 Y29.01746 Z-9.92240 
G1 X225.48563 Y32.18660 Z-9.80183 
G1 X232.25726 Y35.95157 Z-9.96537 
G1 X238.66357 Y40.84625 Z-10.27938 
G1 X243.61537 Y45.73833 Z-10.79795 
G1 X248.37747 Y51.74810 Z-11.61900 
G1 X252.15053 Y57.97070 Z-12.57916 
G1 X255.83772 Y66.52592 Z-13.70681 
G1 X258.22888 Y75.37631 Z-14.72874 
G1 X259.46808 Y84.50014 Z-15.53493 
G1 X259.54794 Y94.00659 Z-16.14472 
G1 X258.59229 Y102.58652 Z-16.55620 
G1 X256.72028 Y111.20028 Z-16.81812 
G1 X253.94580 Y119.81097 Z-16.95059 
G1 X250.27531 Y128.38364 Z-16.97536 
G1 X245.71953 Y136.86292 Z-16.91298 
G1 X240.29520 Y145.18030 Z-16.78485 
G1 X233.64615 Y153.66245 Z-16.60370 
G1 X225.81792 Y162.07391 Z-16.36197 
G1 X217.20932 Y169.90504 Z-16.09252 
G1 X207.87270 Y177.09846 Z-15.80260 
G1 X197.87180 Y183.58835 Z-15.49750 
G1 X191.32379 Y187.25742 Z-15.41248 
G1 X188.82152 Y188.96266 Z-15.65365 
G1 X185.44745 Y190.05376 Z-15.16013 
G1 X182.14360 Y190.83307 Z-15.68305 
G1 X178.02104 Y193.28452 Z-14.86755 
G1 X164.18526 Y198.14804 Z-14.31415 
G1 X153.70927 Y200.77307 Z-13.88580 
G1 X141.59724 Y202.74223 Z-13.40304 
G1 X132.17528 Y203.51656 Z-12.97415 
G1 X121.59966 Y203.58911 Z-12.40692 
G1 X107.81183 Y202.18343 Z-11.38768 
G1 X98.67741 Y200.07875 Z-10.73175 
G1 X91.31187 Y197.48637 Z-10.23000 
G1 X86.14028 Y195.07533 Z-10.00023 
G1 X79.11707 Y190.78290 Z-9.58624 
G1 X72.94344 Y185.72032 Z-9.27430 
G1 X68.40279 Y180.77780 Z-9.07212 
G1 X63.40750 Y173.57677 Z-8.97158 
G1 X60.00529 Y166.72614 Z-8.82269 
G1 X56.98561 Y157.39742 Z-8.44688 
G1 X55.86639 Y151.83487 Z-8.27354 
G1 X56.32057 Y151.08086 Z-7.65939 
G0 Z2.000000
G0 X101.33161 Y38.35571
G1 X101.33161 Y38.35571 Z0 F500.000000
G1 X101.33161 Y38.35571 Z-13.64790 F100.000000
G1 X101.33161 Y38.35571 Z-13.64790 F500.000000
G1 X102.84102 Y42.66626 Z-10.38625 
G1 X104.23088 Y44.96327 Z-9.88161 
G1 X109.05595 Y50.12414 Z-10.25391 
G1 X114.43681 Y56.77122 Z-10.68178 
G1 X122.02274 Y67.90530 Z-11.37259 
G1 X126.12309 Y74.89516 Z-11.71204 
G1 X133.65089 Y89.62907 Z-12.26828 
G1 X137.47076 Y98.08228 Z-12.49998 
G1 X144.86513 Y116.33286 Z-12.82669 
G1 X154.29431 Y141.83282 Z-12.76417 
G1 X162.00339 Y158.75958 Z-12.45980 
G1 X169.60956 Y171.70775 Z-12.06122 
G1 X178.17612 Y183.03716 Z-11.45044 
G1 X179.47041 Y185.07628 Z-11.68028 
G1 X182.14360 Y190.83307 Z-15.68305 
G0 Z2.000000
G0 X188.82152 Y188.96266
G1 X188.82152 Y188.96266 Z0 F500.000000
G1 X188.82152 Y188.96266 Z-15.65365 F100.000000
G1 X188.82152 Y188.96266 Z-15.65365 F500.000000
G1 X191.09839 Y194.19711 Z-11.26704 
G1 X193.23192 Y197.10240 Z-10.21493 
G1 X195.86191 Y199.11943 Z-10.11272 
G1 X204.08835 Y204.57658 Z-9.90746 
G1 X211.08000 Y208.17601 Z-9.72438 
G1 X219.16783 Y211.15189 Z-9.26373 
G1 X228.53368 Y213.14650 Z-8.36678 
G1 X229.29805 Y213.77870 Z-7.74708 
G0 Z2.000000
G0 X228.53368 Y213.14650
G1 X228.53368 Y213.14650 Z0 F500.000000
G1 X228.53368 Y213.14650 Z-8.36678 F100.000000
G1 X228.53368 Y213.14650 Z-8.36678 F500.000000
G1 X228.65179 Y212.96188 Z-8.15751 
G0 Z2.000000
G0 X19.01426 Y26.41212
G1 X19.01426 Y26.41212 Z0 F500.000000
G1 X19.01426 Y26.41212 Z-13.68791 F100.000000
G1 X19.01426 Y26.41212 Z-13.68791 F500.000000
G1 X19.01426 Y26.41212 Z-13.68791 
G1 X20.81396 Y27.20154 Z-15.37177 
G1 X23.99418 Y24.75371 Z-13.88044 
G1 X26.76230 Y23.35208 Z-12.87037 
G1 X30.86569 Y22.06351 Z-11.78996 
G1 X35.54356 Y21.31058 Z-11.02444 
G1 X40.85203 Y21.03279 Z-10.58315 
G1 X48.17540 Y21.27965 Z-10.31863 
G1 X61.07601 Y22.72789 Z-9.92359 
G1 X68.84435 Y24.41850 Z-9.74247 
G1 X76.05282 Y26.67397 Z-9.70647 
G1 X83.11931 Y29.71456 Z-9.78356 
G1 X89.80085 Y33.44109 Z-9.99247 
G1 X92.09609 Y36.92936 Z-11.79396 
G1 X93.00602 Y40.20805 Z-14.60875 
G1 X90.35070 Y41.26232 Z-14.30626 
G1 X79.22066 Y43.96066 Z-14.19509 
G1 X63.59462 Y46.41475 Z-13.70418 
G1 X50.17256 Y47.05698 Z-13.00731 
G1 X44.83669 Y46.75681 Z-12.50620 
G1 X38.68090 Y45.91569 Z-11.69909 
G1 X34.30378 Y44.82671 Z-11.16909 
G1 X30.54224 Y43.34565 Z-10.88005 
G1 X27.45844 Y41.43606 Z-10.90664 
G1 X25.69103 Y39.86602 Z-11.16160 
G1 X23.70012 Y37.40203 Z-11.83474 
G1 X21.83811 Y33.69526 Z-13.08089 
G1 X20.93559 Y30.32954 Z-14.29392 
G1 X20.81396 Y27.20154 Z-15.37177 
G0 Z2.000000
G0 X93.00602 Y40.20805
G1 X93.00602 Y40.20805 Z0 F500.000000
G1 X93.00602 Y40.20805 Z-14.60875 F100.000000
G1 X93.00602 Y40.20805 Z-14.60875 F500.000000
G1 X95.97623 Y39.67372 Z-14.28407 
G1 X101.33161 Y38.35571 Z-14.64790 
G1 X104.37339 Y36.93015 Z-14.20320 
G1 X127.58415 Y30.11340 Z-14.06722 
G1 X138.16006 Y27.64258 Z-13.95909 
G1 X151.56474 Y25.29452 Z-13.72782 
G1 X163.38142 Y23.97940 Z-13.41501 
G1 X173.90578 Y23.38041 Z-13.14017 
G1 X187.31305 Y23.45609 Z-12.58361 
G1 X199.92793 Y24.57175 Z-11.84813 
G1 X209.90602 Y26.54983 Z-11.27574 
G1 X217.94870 Y29.01746 Z-10.92240 
G1 X225.48563 Y32.18660 Z-10.80183 
G1 X232.25726 Y35.95157 Z-10.96537 
G1 X238.66357 Y40.84625 Z-11.27938 
G1 X243.61537 Y45.73833 Z-11.79795 
G1 X248.37747 Y51.74810 Z-12.61900 
G1 X252.15053 Y57.97070 Z-13.57916 
G1 X255.83772 Y66.52592 Z-14.70681 
G1 X258.22888 Y75.37631 Z-15.72874 
G1 X259.46808 Y84.50014 Z-16.53493 
G1 X259.54794 Y94.00659 Z-17.14472 
G1 X258.59229 Y102.58652 Z-17.55620 
G1 X256.72028 Y111.20028 Z-17.81812 
G1 X253.94580 Y119.81097 Z-17.95059 
G1 X250.27531 Y128.38364 Z-17.97536 
G1 X245.71953 Y136.86292 Z-17.91298 
G1 X240.29520 Y145.18030 Z-17.78485 
G1 X233.64615 Y153.66245 Z-17.60370 
G1 X225.81792 Y162.07391 Z-17.36197 
G1 X217.20932 Y169.90504 Z-17.09252 
G1 X207.87270 Y177.09846 Z-16.80260 
G1 X197.87180 Y183.58835 Z-16.49750 
G1 X191.32379 Y187.25742 Z-16.41248 
G1 X188.82152 Y188.96266 Z-16.65365 
G1 X185.44745 Y190.05376 Z-16.16013 
G1 X182.14360 Y190.83307 Z-16.68305 
G1 X178.02104 Y193.28452 Z-15.86755 
G1 X164.18526 Y198.14804 Z-15.31415 
G1 X153.70927 Y200.77307 Z-14.88580 
G1 X141.59724 Y202.74223 Z-14.40304 
G1 X132.17528 Y203.51656 Z-13.97415 
G1 X121.59966 Y203.58911 Z-13.40692 
G1 X107.81183 Y202.18343 Z-12.38768 
G1 X98.67741 Y200.07875 Z-11.73175 
G1 X91.31187 Y197.48637 Z-11.23000 
G1 X86.14028 Y195.07533 Z-11.00023 
G1 X79.11707 Y190.78290 Z-10.58624 
G1 X72.94344 Y185.72032 Z-10.27430 
G1 X68.40279 Y180.77780 Z-10.07212 
G1 X63.40750 Y173.57677 Z-9.97158 
G1 X60.00529 Y166.72614 Z-9.82269 
G1 X56.98561 Y157.39742 Z-9.44688 
G1 X55.86639 Y151.83487 Z-9.27354 
G1 X56.32057 Y151.08086 Z-8.65940 
G0 Z2.000000
G0 X101.33161 Y38.35571
G1 X101.33161 Y38.35571 Z0 F500.000000
G1 X101.33161 Y38.35571 Z-14.64790 F100.000000
G1 X101.33161 Y38.35571 Z-14.64790 F500.000000
G1 X102.84102 Y42.66626 Z-11.38625 
G1 X104.23088 Y44.96327 Z-10.88161 
G1 X109.05595 Y50.12414 Z-11.25391 
G1 X114.43681 Y56.77122 Z-11.68178 
G1 X122.02274 Y67.90530 Z-12.37259 
G1 X126.12309 Y74.89516 Z-12.71204 
G1 X133.65089 Y89.62907 Z-13.26828 
G1 X137.47076 Y98.08228 Z-13.49998 
G1 X144.86513 Y116.33286 Z-13.82669 
G1 X154.29431 Y141.83282 Z-13.76417 
G1 X162.00339 Y158.75958 Z-13.45980 
G1 X169.60956 Y171.70775 Z-13.06122 
G1 X178.17612 Y183.03716 Z-12.45044 
G1 X179.47041 Y185.07628 Z-12.68028 
G1 X182.14360 Y190.83307 Z-16.68305 
G0 Z2.000000
G0 X188.82152 Y188.96266
G1 X188.82152 Y188.96266 Z0 F500.000000
G1 X188.82152 Y188.96266 Z-16.65365 F100.000000
G1 X188.82152 Y188.96266 Z-16.65365 F500.000000
G1 X191.09839 Y194.19711 Z-12.26704 
G1 X193.23192 Y197.10240 Z-11.21493 
G1 X195.86191 Y199.11943 Z-11.11272 
G1 X204.08835 Y204.57658 Z-10.90746 
G1 X211.08000 Y208.17601 Z-10.72438 
G1 X219.16783 Y211.15189 Z-10.26373 
G1 X228.53368 Y213.14650 Z-9.36678 
G1 X229.29805 Y213.77870 Z-8.74708 
G0 Z2.000000
G0 X228.53368 Y213.14650
G1 X228.53368 Y213.14650 Z0 F500.000000
G1 X228.53368 Y213.14650 Z-9.36678 F100.000000
G1 X228.53368 Y213.14650 Z-9.36678 F500.000000
G1 X228.65179 Y212.96188 Z-9.15751 
G0 Z2.000000
G0 X19.01426 Y26.41212
G1 X19.01426 Y26.41212 Z0 F500.000000
G1 X19.01426 Y26.41212 Z-14.68791 F100.000000
G1 X19.01426 Y26.41212 Z-14.68791 F500.000000
G1 X19.01426 Y26.41212 Z-14.68791 
G1 X20.81396 Y27.20154 Z-16.37177 
G1 X23.99418 Y24.75371 Z-14.88044 
G1 X26.76230 Y23.35208 Z-13.87037 
G1 X30.86569 Y22.06351 Z-12.78996 
G1 X35.54356 Y21.31058 Z-12.02444 
G1 X40.85203 Y21.03279 Z-11.58315 
G1 X48.17540 Y21.27965 Z-11.31863 
G1 X61.07601 Y22.72789 Z-10.92359 
G1 X68.84435 Y24.41850 Z-10.74247 
G1 X76.05282 Y26.67397 Z-10.70647 
G1 X83.11931 Y29.71456 Z-10.78356 
G1 X89.80085 Y33.44109 Z-10.99247 
G1 X92.09609 Y36.92936 Z-12.79396 
G1 X93.00602 Y40.20805 Z-15.60875 
G1 X90.35070 Y41.26232 Z-15.30626 
G1 X79.22066 Y43.96066 Z-15.19509 
G1 X63.59462 Y46.41475 Z-14.70418 
G1 X50.17256 Y47.05698 Z-14.00731 
G1 X44.83669 Y46.75681 Z-13.50620 
G1 X38.68090 Y45.91569 Z-12.69909 
G1 X34.30378 Y44.82671 Z-12.16909 
G1 X30.54224 Y43.34565 Z-11.88005 
G1 X27.45844 Y41.43606 Z-11.90664 
G1 X25.69103 Y39.86602 Z-12.16160 
G1 X23.70012 Y37.40203 Z-12.83474 
G1 X21.83811 Y33.69526 Z-14.08089 
G1 X20.93559 Y30.32954 Z-15.29392 
G1 X20.81396 Y27.20154 Z-16.37177 
G0 Z2.000000
G0 X93.00602 Y40.20805
G1 X93.00602 Y40.20805 Z0 F500.000000
G1 X93.00602 Y40.20805 Z-15.60875 F100.000000
G1 X93.00602 Y40.20805 Z-15.60875 F500.000000
G1 X95.97623 Y39.67372 Z-15.28407 
G1 X101.33161 Y38.35571 Z-15.64790 
G1 X104.37339 Y36.93015 Z-15.20320 
G1 X127.58415 Y30.11340 Z-15.06722 
G1 X138.16006 Y27.64258 Z-14.95909 
G1 X151.56474 Y25.29452 Z-14.72782 
G1 X163.38142 Y23.97940 Z-14.41501 
G1 X173.90578 Y23.38041 Z-14.14017 
G1 X187.31305 Y23.45609 Z-13.58361 
G1 X199.92793 Y24.57175 Z-12.84813 
G1 X209.90602 Y26.54983 Z-12.27574 
G1 X217.94870 Y29.01746 Z-11.92240 
G1 X225.48563 Y32.18660 Z-11.80183 
G1 X232.25726 Y35.95157 Z-11.96537 
G1 X238.66357 Y40.84625 Z-12.27938 
G1 X243.61537 Y45.73833 Z-12.79795 
G1 X248.37747 Y51.74810 Z-13.61900 
G1 X252.15053 Y57.97070 Z-14.57916 
G1 X255.83772 Y66.52592 Z-15.70681 
G1 X258.22888 Y75.37631 Z-16.72874 
G1 X259.46808 Y84.50014 Z-17.53493 
G1 X259.54794 Y94.00659 Z-18.14472 
G1 X258.59229 Y102.58652 Z-18.55620 
G1 X256.72028 Y111.20028 Z-18.81812 
G1 X253.94580 Y119.81097 Z-18.95059 
G1 X250.27531 Y128.38364 Z-18.97536 
G1 X245.71953 Y136.86292 Z-18.91298 
G1 X240.29520 Y145.18030 Z-18.78485 
G1 X233.64615 Y153.66245 Z-18.60370 
G1 X225.81792 Y162.07391 Z-18.36197 
G1 X217.20932 Y169.90504 Z-18.09252 
G1 X207.87270 Y177.09846 Z-17.80260 
G1 X197.87180 Y183.58835 Z-17.49750 
G1 X191.32379 Y187.25742 Z-17.41248 
G1 X188.82152 Y188.96266 Z-17.65365 
G1 X185.44745 Y190.05376 Z-17.16013 
G1 X182.14360 Y190.83307 Z-17.68305 
G1 X178.02104 Y193.28452 Z-16.86755 
G1 X164.18526 Y198.14804 Z-16.31415 
G1 X153.70927 Y200.77307 Z-15.88580 
G1 X141.59724 Y202.74223 Z-15.40304 
G1 X132.17528 Y203.51656 Z-14.97415 
G1 X121.59966 Y203.58911 Z-14.40692 
G1 X107.81183 Y202.18343 Z-13.38768 
G1 X98.67741 Y200.07875 Z-12.73175 
G1 X91.31187 Y197.48637 Z-12.23000 
G1 X86.14028 Y195.07533 Z-12.00023 
G1 X79.11707 Y190.78290 Z-11.58624 
G1 X72.94344 Y185.72032 Z-11.27430 
G1 X68.40279 Y180.77780 Z-11.07212 
G1 X63.40750 Y173.57677 Z-10.97158 
G1 X60.00529 Y166.72614 Z-10.82269 
G1 X56.98561 Y157.39742 Z-10.44688 
G1 X55.86639 Y151.83487 Z-10.27354 
G1 X56.32057 Y151.08086 Z-9.65940 
G0 Z2.000000
G0 X101.33161 Y38.35571
G1 X101.33161 Y38.35571 Z0 F500.000000
G1 X101.33161 Y38.35571 Z-15.64790 F100.000000
G1 X101.33161 Y38.35571 Z-15.64790 F500.000000
G1 X102.84102 Y42.66626 Z-12.38625 
G1 X104.23088 Y44.96327 Z-11.88161 
G1 X109.05595 Y50.12414 Z-12.25391 
G1 X114.43681 Y56.77122 Z-12.68178 
G1 X122.02274 Y67.90530 Z-13.37259 
G1 X126.12309 Y74.89516 Z-13.71204 
G1 X133.65089 Y89.62907 Z-14.26828 
G1 X137.47076 Y98.08228 Z-14.49998 
G1 X144.86513 Y116.33286 Z-14.82669 
G1 X154.29431 Y141.83282 Z-14.76417 
G1 X162.00339 Y158.75958 Z-14.45980 
G1 X169.60956 Y171.70775 Z-14.06122 
G1 X178.17612 Y183.03716 Z-13.45044 
G1 X179.47041 Y185.07628 Z-13.68028 
G1 X182.14360 Y190.83307 Z-17.68305 
G0 Z2.000000
G0 X188.82152 Y188.96266
G1 X188.82152 Y188.96266 Z0 F500.000000
G1 X188.82152 Y188.96266 Z-17.65365 F100.000000
G1 X188.82152 Y188.96266 Z-17.65365 F500.000000
G1 X191.09839 Y194.19711 Z-13.26704 
G1 X193.23192 Y197.10240 Z-12.21493 
G1 X195.86191 Y199.11943 Z-12.11272 
G1 X204.08835 Y204.57658 Z-11.90746 
G1 X211.08000 Y208.17601 Z-11.72438 
G1 X219.16783 Y211.15189 Z-11.26373 
G1 X228.53368 Y213.14650 Z-10.36678 
G1 X229.29805 Y213.77870 Z-9.74708 
G0 Z2.000000
G0 X228.53368 Y213.14650
G1 X228.53368 Y213.14650 Z0 F500.000000
G1 X228.53368 Y213.14650 Z-10.36678 F100.000000
G1 X228.53368 Y213.14650 Z-10.36678 F500.000000
G1 X228.65179 Y212.96188 Z-10.15751 
G0 Z2.000000
G0 X19.01426 Y26.41212
G1 X19.01426 Y26.41212 Z0 F500.000000
G1 X19.01426 Y26.41212 Z-15.68791 F100.000000
G1 X19.01426 Y26.41212 Z-15.68791 F500.000000
G1 X19.01426 Y26.41212 Z-15.68791 
G1 X20.81396 Y27.20154 Z-17.37177 
G1 X23.99418 Y24.75371 Z-15.88044 
G1 X26.76230 Y23.35208 Z-14.87037 
G1 X30.86569 Y22.06351 Z-13.78996 
G1 X35.54356 Y21.31058 Z-13.02444 
G1 X40.85203 Y21.03279 Z-12.58315 
G1 X48.17540 Y21.27965 Z-12.31863 
G1 X61.07601 Y22.72789 Z-11.92359 
G1 X68.84435 Y24.41850 Z-11.74247 
G1 X76.05282 Y26.67397 Z-11.70647 
G1 X83.11931 Y29.71456 Z-11.78356 
G1 X89.80085 Y33.44109 Z-11.99247 
G1 X92.09609 Y36.92936 Z-13.79396 
G1 X93.00602 Y40.20805 Z-16.60875 
G1 X90.35070 Y41.26232 Z-16.30626 
G1 X79.22066 Y43.96066 Z-16.19509 
G1 X63.59462 Y46.41475 Z-15.70418 
G1 X50.17256 Y47.05698 Z-15.00731 
G1 X44.83669 Y46.75681 Z-14.50620 
G1 X38.68090 Y45.91569 Z-13.69909 
G1 X34.30378 Y44.82671 Z-13.16909 
G1 X30.54224 Y43.34565 Z-12.88005 
G1 X27.45844 Y41.43606 Z-12.90664 
G1 X25.69103 Y39.86602 Z-13.16160 
G1 X23.70012 Y37.40203 Z-13.83474 
G1 X21.83811 Y33.69526 Z-15.08089 
G1 X20.93559 Y30.32954 Z-16.29392 
G1 X20.81396 Y27.20154 Z-17.37177 
G0 Z2.000000
G0 X93.00602 Y40.20805
G1 X93.00602 Y40.20805 Z0 F500.000000
G1 X93.00602 Y40.20805 Z-16.60875 F100.000000
G1 X93.00602 Y40.20805 Z-16.60875 F500.000000
G1 X95.97623 Y39.67372 Z-16.28407 
G1 X101.33161 Y38.35571 Z-16.64790 
G1 X104.37339 Y36.93015 Z-16.20320 
G1 X127.58415 Y30.11340 Z-16.06722 
G1 X138.16006 Y27.64258 Z-15.95909 
G1 X151.56474 Y25.29452 Z-15.72782 
G1 X163.38142 Y23.97940 Z-15.41501 
G1 X173.90578 Y23.38041 Z-15.14017 
G1 X187.31305 Y23.45609 Z-14.58361 
G1 X199.92793 Y24.57175 Z-13.84813 
G1 X209.90602 Y26.54983 Z-13.27574 
G1 X217.94870 Y29.01746 Z-12.92240 
G1 X225.48563 Y32.18660 Z-12.80183 
G1 X232.25726 Y35.95157 Z-12.96537 
G1 X238.66357 Y40.84625 Z-13.27938 
G1 X243.61537 Y45.73833 Z-13.79795 
G1 X248.37747 Y51.74810 Z-14.61900 
G1 X252.15053 Y57.97070 Z-15.57916 
G1 X255.83772 Y66.52592 Z-16.70681 
G1 X258.22888 Y75.37631 Z-17.72874 
G1 X259.46808 Y84.50014 Z-18.53493 
G1 X259.54794 Y94.00659 Z-19.14472 
G1 X258.59229 Y102.58652 Z-19.55620 
G1 X256.72028 Y111.20028 Z-19.81812 
G1 X253.94580 Y119.81097 Z-19.95059 
G1 X250.27531 Y128.38364 Z-19.97536 
G1 X245.71953 Y136.86292 Z-19.91298 
G1 X240.29520 Y145.18030 Z-19.78485 
G1 X233.64615 Y153.66245 Z-19.60370 
G1 X225.81792 Y162.07391 Z-19.36197 
G1 X217.20932 Y169.90504 Z-19.09252 
G1 X207.87270 Y177.09846 Z-18.80260 
G1 X197.87180 Y183.58835 Z-18.49750 
G1 X191.32379 Y187.25742 Z-18.41248 
G1 X188.82152 Y188.96266 Z-18.65365 
G1 X185.44745 Y190.05376 Z-18.16013 
G1 X182.14360 Y190.83307 Z-18.68305 
G1 X178.02104 Y193.28452 Z-17.86755 
G1 X164.18526 Y198.14804 Z-17.31415 
G1 X153.70927 Y200.77307 Z-16.88580 
G1 X141.59724 Y202.74223 Z-16.40304 
G1 X132.17528 Y203.51656 Z-15.97415 
G1 X121.59966 Y203.58911 Z-15.40692 
G1 X107.81183 Y202.18343 Z-14.38768 
G1 X98.67741 Y200.07875 Z-13.73175 
G1 X91.31187 Y197.48637 Z-13.23000 
G1 X86.14028 Y195.07533 Z-13.00023 
G1 X79.11707 Y190.78290 Z-12.58624 
G1 X72.94344 Y185.72032 Z-12.27430 
G1 X68.40279 Y180.77780 Z-12.07212 
G1 X63.40750 Y173.57677 Z-11.97158 
G1 X60.00529 Y166.72614 Z-11.82269 
G1 X56.98561 Y157.39742 Z-11.44688 
G1 X55.86639 Y151.83487 Z-11.27354 
G1 X56.32057 Y151.08086 Z-10.65940 
G0 Z2.000000
G0 X101.33161 Y38.35571
G1 X101.33161 Y38.35571 Z0 F500.000000
G1 X101.33161 Y38.35571 Z-16.64790 F100.000000
G1 X101.33161 Y38.35571 Z-16.64790 F500.000000
G1 X102.84102 Y42.66626 Z-13.38625 
G1 X104.23088 Y44.96327 Z-12.88161 
G1 X109.05595 Y50.12414 Z-13.25391 
G1 X114.43681 Y56.77122 Z-13.68178 
G1 X122.02274 Y67.90530 Z-14.37259 
G1 X126.12309 Y74.89516 Z-14.71204 
G1 X133.65089 Y89.62907 Z-15.26828 
G1 X137.47076 Y98.08228 Z-15.49998 
G1 X144.86513 Y116.33286 Z-15.82669 
G1 X154.29431 Y141.83282 Z-15.76417 
G1 X162.00339 Y158.75958 Z-15.45980 
G1 X169.60956 Y171.70775 Z-15.06122 
G1 X178.17612 Y183.03716 Z-14.45044 
G1 X179.47041 Y185.07628 Z-14.68028 
G1 X182.14360 Y190.83307 Z-18.68305 
G0 Z2.000000
G0 X188.82152 Y188.96266
G1 X188.82152 Y188.96266 Z0 F500.000000
G1 X188.82152 Y188.96266 Z-18.65365 F100.000000
G1 X188.82152 Y188.96266 Z-18.65365 F500.000000
G1 X191.09839 Y194.19711 Z-14.26704 
G1 X193.23192 Y197.10240 Z-13.21493 
G1 X195.86191 Y199.11943 Z-13.11272 
G1 X204.08835 Y204.57658 Z-12.90746 
G1 X211.08000 Y208.17601 Z-12.72438 
G1 X219.16783 Y211.15189 Z-12.26373 
G1 X228.53368 Y213.14650 Z-11.36678 
G1 X229.29805 Y213.77870 Z-10.74708 
G0 Z2.000000
G0 X228.53368 Y213.14650
G1 X228.53368 Y213.14650 Z0 F500.000000
G1 X228.53368 Y213.14650 Z-11.36678 F100.000000
G1 X228.53368 Y213.14650 Z-11.36678 F500.000000
G1 X228.65179 Y212.96188 Z-11.15751 
G0 Z2.0
M2
"""
    val parsed = objParser.parse(objParser.gCode,objParser.filterOutWhiteSpace(arg))
    parsed.successful should be (true)
    val rest = parsed.next.source.toString.substring(parsed.next.offset)
    if (rest.size > 0) println("unparsed:" + rest)
    rest.size should be (0)
    val ret = parsed.get
    ret.commands.size should be (681)
  }
}